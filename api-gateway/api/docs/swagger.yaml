definitions:
  models.Comment:
    properties:
      content:
        type: string
      createdat:
        type: string
      deletedAt:
        type: string
      id:
        type: string
      owner_id:
        type: string
      post_id:
        type: string
      updatedat:
        type: string
    type: object
  models.CreateComment:
    properties:
      content:
        type: string
      id:
        type: string
      owner_id:
        type: string
      post_id:
        type: string
    type: object
  models.CreateUserRoleRequest:
    properties:
      metod:
        type: string
      path:
        type: string
      role:
        type: string
    type: object
  models.Error:
    properties:
      message:
        type: string
    type: object
  models.Post:
    properties:
      id:
        type: string
      image_url:
        type: string
      name:
        type: string
      owner_id:
        type: string
    type: object
  models.StandardErrorModel:
    properties:
      error:
        $ref: '#/definitions/models.Error'
    type: object
  models.User:
    properties:
      email:
        type: string
      id:
        type: string
      last_name:
        type: string
      name:
        type: string
      password:
        type: string
      user_name:
        type: string
    type: object
  models.UserResponse:
    properties:
      access_token:
        type: string
      email:
        type: string
      id:
        type: string
      last_name:
        type: string
      name:
        type: string
      password:
        type: string
      refresh_token:
        type: string
      user_name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: you can use this as social network
  title: Welcome to swagger service
  version: "1.0"
paths:
  /v1/Comments/:
    post:
      consumes:
      - application/json
      description: Api for creating a new comment
      parameters:
      - description: create Comment Model
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.CreateComment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Comment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: CreateComment
      tags:
      - comment
  /v1/comments/:
    get:
      consumes:
      - application/json
      description: Api for getting comment by page and limit
      parameters:
      - description: PAGE
        in: path
        name: page
        required: true
        type: string
      - description: LIMIT
        in: path
        name: limit
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: GetComment
      tags:
      - comment
  /v1/comments/{id}:
    delete:
      consumes:
      - application/json
      description: Api for getting comment by id
      parameters:
      - description: ID
        in: path
        name: page
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: DeleteComment
      tags:
      - comment
    get:
      consumes:
      - application/json
      description: Api for getting comment by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: GetComment
      tags:
      - comment
    put:
      consumes:
      - application/json
      description: Api for getting comment by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: UpdateComment
      tags:
      - comment
  /v1/create_role/:
    post:
      consumes:
      - application/json
      description: Api for creating a new user
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: CreatePost
      tags:
      - rbac
  /v1/login/:
    get:
      consumes:
      - application/json
      description: Api for Login
      parameters:
      - description: EMAIL
        in: query
        name: email
        required: true
        type: string
      - description: PASSWORD
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: Login
      tags:
      - register
  /v1/posts/:
    get:
      consumes:
      - application/json
      description: Api for getting post by page and limit
      parameters:
      - description: PAGE
        in: path
        name: page
        required: true
        type: string
      - description: LIMIT
        in: path
        name: limit
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: GetListPosts
      tags:
      - post
    post:
      consumes:
      - application/json
      description: Api for creating a new user
      parameters:
      - description: createPostModel
        in: body
        name: Post
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: CreatePost
      tags:
      - post
  /v1/posts/{id}:
    delete:
      consumes:
      - application/json
      description: Api for deleting post by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: UpdatePost
      tags:
      - post
    get:
      consumes:
      - application/json
      description: Api for getting post by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: GetPost
      tags:
      - post
    put:
      consumes:
      - application/json
      description: Api for updating post by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: UpdatePost
      tags:
      - post
  /v1/refreshusertoken:
    get:
      consumes:
      - application/json
      description: refresh token user
      parameters:
      - description: REFRESHTOKEN
        in: query
        name: refresh_token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: Verification User
      tags:
      - register
  /v1/register/:
    post:
      consumes:
      - application/json
      description: Api for registration
      parameters:
      - description: createUserModel
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: Register
      tags:
      - register
  /v1/users/:
    get:
      consumes:
      - application/json
      description: Api for getting users by page and limit
      parameters:
      - description: page
        in: path
        name: Page
        required: true
        type: string
      - description: limit
        in: path
        name: Limit
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: ListUser
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Api for creating a new user
      parameters:
      - description: createUserModel
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: CreateUser
      tags:
      - user
  /v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: Api for deleting users by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: DeleteUser
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Api for getting user by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: GetUser
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Api for updating users by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      security:
      - ApiKeyAuth: []
      summary: UpdateUser
      tags:
      - user
  /v1/verification:
    get:
      consumes:
      - application/json
      description: LogIn - Api for verification users
      parameters:
      - description: Email
        in: query
        name: email
        required: true
        type: string
      - description: Code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: Verification User
      tags:
      - register
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
